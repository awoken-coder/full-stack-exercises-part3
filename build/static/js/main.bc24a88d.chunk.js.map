{"version":3,"sources":["services/persons.js","components/FormAddPeople.js","App.js","index.js"],"names":["baseUrl","axios","get","then","request","console","log","data","newObject","post","response","catch","error","id","delete","put","FormAddPeople","addPerson","newName","handleNameChange","newNum","handleNumChange","onSubmit","value","onChange","type","Numbers","persons","handleRemove","list","map","person","key","name","number","onClick","Notification","message","className","App","useState","setPersons","setNewName","setNewNum","personsToShow","setPersonsToShow","filter","setFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personsService","handleErrorNotification","toLowerCase","includes","handleUpdate","newPerson","window","confirm","status","handleNotification","setTimeout","event","filterTemp","target","foo","preventDefault","forEach","nameObject","personAdded","hasOwnProperty","personsAfterAdd","concat","find","obj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc24a88d.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request =\n        axios\n            .get(baseUrl)\n    return request.then((request) => {\n        console.log('server getAll function output', request.data)\n        return (request.data)\n    })\n}\n\nconst add = (newObject) => {\n    console.log('server.add input', newObject)\n    const request =\n        axios\n            .post(baseUrl, newObject)\n    return request.then((response) => {\n        console.log('server.add output', response.data)\n        return response.data\n    })\n    .catch(error => {\n        console.log('add from server failed',error.response)\n        return error.response\n    })\n    \n}\n\nconst remove = (id) => {\n    console.log('remove func id is,', id)\n    const request =\n        axios\n            .delete(`${baseUrl}/${id}`)\n    return request.then(\n        (response => console.log('delete response is',response))\n    )\n    .catch(error => {\n        console.log('delete from server failed',error)\n    })\n}\nconst update = (id,newObject) => {\n    console.log('is updating',newObject)\n    const request =\n        axios\n            .put(`${baseUrl}/${id}`, newObject)\n    return  request.then(response => {\n            console.log('update raw output',response)\n            return response})\n            .catch(error=> {\n                console.log('error',error.response,error.response.data.error)\n                return error.response\n            })\n        \n}\n\n\nexport default {\n    getAll,\n    add,\n    remove,\n    update\n}","import React from 'react';\n\nconst FormAddPeople = ({\n    addPerson,\n    newName,\n    handleNameChange,\n    newNum,\n    handleNumChange\n}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <h2>add a new</h2>\n            <div>\n                name:\n                    <input        \n                    value={newName}\n                     onChange={handleNameChange}\n                />\n            </div>\n            <div>\n                number:\n                    <input\n                    value={newNum}\n                    onChange={handleNumChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default FormAddPeople","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport FormAddPeople from './components/FormAddPeople'\n\n// Component creates list of numbers\nconst Numbers = ({ persons, handleRemove }) => {\n    console.log('numbers input', persons)\n    const list = persons.map(\n        (person) => {\n            return (<li key={`${person.id}`}>\n                {person.name} {person.number} <button onClick={() => handleRemove(person.id)}>delete</button>\n            </li>)\n        }\n    )\n    return (\n        <div>\n            <h2>Numbers</h2>\n            <ul>{list}</ul>\n        </div>\n    )\n}\n// Component notification\nconst Notification = ({ message, className }) => {\n    console.log('notification', message)\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\n// Component app\nconst App = () => {\n    // States\n    const [persons, setPersons] = useState([{ name: '', number: '', id: '' }])\n    const [newName, setNewName] = useState('')\n    const [newNum, setNewNum] = useState('')\n    const [personsToShow, setPersonsToShow] = useState(persons)\n    const [filter, setFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n\n    // Gets persons from server\n    useEffect(() => {\n        personsService\n            .getAll()\n            .then(persons => {\n                console.log('effect output', persons)\n                setPersons(persons)\n                setFilter('')\n                setPersonsToShow(persons)\n                console.log('initial persons e show,e filter', persons)\n            })\n            .catch(error => handleErrorNotification(error))\n    }, [])\n\n    // Effect filters contacts\n    useEffect(() => {\n        console.log('filtragem', persons)\n        setPersonsToShow(() => filter === '' ? persons :\n            persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())\n            ))\n    }, [persons, filter])\n    // Function adds new person/updates to the list\n    const addPerson = (event) => {\n        var foo = false\n        console.log('addPerson new', newName, newNum)\n        event.preventDefault()\n        persons.forEach(person => {\n            if (person.name === newName) {\n                handleUpdate(person.id, newName, newNum)\n                setNewName('')\n                setNewNum('')\n                foo = true\n            }\n        })\n        if (foo) return\n        console.log('addPerson input', event)\n\n        const nameObject = {\n            name: newName,\n            number: newNum\n        }\n        console.log('add person before input', nameObject)\n        personsService\n            .add(nameObject)\n            .then((personAdded) => {\n                if (personAdded.hasOwnProperty('request')) {\n                    handleErrorNotification(personAdded.data.error)\n                }\n                else {\n                    const personsAfterAdd = persons.concat(personAdded)\n                    console.log('setpersons input', personsAfterAdd)\n                    setPersons(personsAfterAdd)\n                    setNewName('')\n                    setNewNum('')\n                    const message = `${newName} was successfuly added`\n                    console.log('add person output message is', message)\n                    handleNotification(message)\n                }\n            })\n            .catch(error => console.log('app.js', error))\n    }\n\n    //Functions add new Name and Number\n    const handleNameChange = (event) => {\n        console.log('setNewName and persons', event.target.value, persons)\n        setNewName(event.target.value)\n    }\n    const handleNumChange = (event) => {\n        console.log('setNewNum', event.target.value)\n        setNewNum(event.target.value)\n        return console.log('updated')\n    }\n    //Function event filter\n    const handleFilterChange = (event) => {\n        var filterTemp = event.target.value\n        setFilter(filterTemp)\n        console.log('filter')\n    }\n    //Function remove entry\n    const handleRemove = (id) => {\n        const person = persons.find(obj => {\n            return obj.id === id\n        })\n        console.log('removing entry', id, person)\n        const confirmation = window.confirm(`Are you sure you want to delete ${person.name}'s contact?`)\n        if (!confirmation) { return console.log('removal aborted') }\n        personsService.remove(id)\n            .then(() => {\n                console.log('remove part 2')\n                personsService\n                    .getAll()\n                    .then((persons) => {\n                        console.log('effect output', persons)\n                        setPersons(persons)\n                        const message = `${person.name} was successfuly deleted`\n                        console.log('delete person output message is', message)\n                        handleNotification(message)\n                    })\n            })\n    }\n    //Function update\n    const handleUpdate = (id, newName, newNum) => {\n        const newPerson = {\n            name: newName,\n            number: newNum,\n            id: id\n        }\n        console.log('handle update', newPerson)\n        const confirmation = window.confirm(\n            `${newPerson.name}'s contact already exists. Do you wish to update it?`\n        )\n        if (!confirmation) { return console.log('update aborted') }\n\n        personsService\n            .update(id, newPerson)\n            .then((response) => {\n                if (response.status !== 200) {\n                    console.log('error part of handle update')\n                    handleErrorNotification(response.data.error)\n                    personsService.getAll()\n                        .then((persons) => {\n                            console.log('update output', persons)\n                            setPersons(persons)\n                        })\n                }\n                else {\n                    console.log('worked')\n                    handleNotification(`${newPerson.name} was successfuly updated`)\n                    personsService.getAll()\n                        .then((persons) => {\n                            console.log('update output', persons)\n                            setPersons(persons)\n                        })\n                }\n            })\n    }\n\n    //Function handle notification\n    const handleNotification = (message) => {\n        console.log('handle notification input is', message)\n        setNotificationMessage(message)\n        setTimeout(() => {\n            setNotificationMessage(null)\n        }, 5000)\n    }\n    //Function handle errorNotification\n    const handleErrorNotification = (message) => {\n        console.log('handle errorNotification input is', message)\n        setErrorMessage(message)\n        setTimeout(() => {\n            setErrorMessage(null)\n        }, 5000)\n    }\n    //Body of Page\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification className='notification' message={notificationMessage} />\n            <Notification className='error' message={errorMessage} />\n\n            <div>\n                filter shown with\n                    <input\n                    onChange={handleFilterChange} value={filter}\n                />\n            </div>\n            <FormAddPeople addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNum={newNum} handleNumChange={handleNumChange} />\n            <Numbers persons={personsToShow} handleRemove={handleRemove} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}